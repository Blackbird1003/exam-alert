// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Admin {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email     String   @unique @map("email")
  password  String   @map("password")
  createdAt DateTime @default(dbgenerated("now()")) @map("created_at")
  updatedAt DateTime @default(dbgenerated("now()")) @updatedAt @map("updated_at")

  @@map("admins")
}

model Student {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  firstName    String   @map("first_name")
  lastName     String   @map("last_name")
  matricNumber String   @unique @map("matric_number")
  phone        String   @map("phone")
  email        String   @unique @map("email")
  faculty      String   @map("faculty")
  department   String   @map("department")
  level        String   @map("level")
  password     String   @map("password")
  createdAt    DateTime @default(dbgenerated("now()")) @map("created_at")
  updatedAt    DateTime @default(dbgenerated("now()")) @updatedAt @map("updated_at")

  @@map("students")
}

model Faculty {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String   @map("name")
  createdAt DateTime @default(dbgenerated("now()")) @map("created_at")
  updatedAt DateTime @default(dbgenerated("now()")) @updatedAt @map("updated_at")

  facultyHalls FacultyHall[]
  timeTables   TimeTable[]

  @@map("faculties")
}

model FacultyHall {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String   @map("name")
  faculty     Faculty  @relation(fields: [facultyId], references: [id])
  facultyId   String   @map("faculty_id") @db.Uuid
  maxCapacity Int      @map("max_capacity")
  createdAt   DateTime @default(dbgenerated("now()")) @map("created_at")
  updatedAt   DateTime @default(dbgenerated("now()")) @updatedAt @map("updated_at")

  @@map("faculty_halls")
}

model TimeTable {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String   @map("name")
  faculty   Faculty  @relation(fields: [facultyId], references: [id])
  facultyId String   @map("faculty_id") @db.Uuid
  session   String   @unique @map("session")
  createdAt DateTime @default(dbgenerated("now()")) @map("created_at")
  updatedAt DateTime @default(dbgenerated("now()")) @updatedAt @map("updated_at")

  courses TimeTableCourse[]

  @@map("time_tables")
}

model TimeTableCourse {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  timeTableId      String   @map("time_table_id") @db.Uuid
  courseCode       String   @map("course_code")
  courseTitle      String   @map("course_title")
  courseUnit       Int      @map("course_unit")
  numberOfStudents Int      @map("number_of_students")
  createdAt        DateTime @default(dbgenerated("now()")) @map("created_at")
  updatedAt        DateTime @default(dbgenerated("now()")) @updatedAt @map("updated_at")

  timeTable TimeTable @relation(fields: [timeTableId], references: [id])

  @@map("time_table_courses")
}
